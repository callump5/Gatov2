{
  "{\"assumptions\":{},\"sourceRoot\":\"/Users/callum/Documents/Coding/Projects/gatov2/wp-content/themes/gatov2/\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"/Users/callum/Documents/Coding/Projects/gatov2/wp-content/themes/gatov2\",\"filename\":\"/Users/callum/Documents/Coding/Projects/gatov2/wp-content/themes/gatov2/gulpfile.babel.js\",\"targets\":{},\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"browserslistConfigFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/Users/callum/Documents/Coding/Projects/gatov2/wp-content/themes/gatov2\",\"rootMode\":\"root\",\"plugins\":[{\"key\":\"proposal-class-properties\",\"visitor\":{\"PrivateName\":{\"enter\":[null]},\"ExportDefaultDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]}},\"options\":{\"loose\":\"#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error\"}},{\"key\":\"proposal-private-methods\",\"visitor\":{\"PrivateName\":{\"enter\":[null]},\"ExportDefaultDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]}},\"options\":{\"loose\":\"#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error\"}},{\"key\":\"proposal-numeric-separator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"NumericLiteral\":{\"enter\":[null]},\"BigIntLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-logical-assignment-operators\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"AssignmentExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":true,\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-escapes\",\"visitor\":{\"Identifier\":{\"enter\":[null]},\"TemplateElement\":{\"enter\":[null]},\"_exploded\":true,\"StringLiteral\":{\"enter\":[null]},\"DirectiveLiteral\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"StaticBlock\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-export-namespace-from\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"ExportNamedDeclaration\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.14.2": {
    "metadata": {},
    "options": {
      "assumptions": {},
      "sourceRoot": "/Users/callum/Documents/Coding/Projects/gatov2/wp-content/themes/gatov2/",
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "/Users/callum/Documents/Coding/Projects/gatov2/wp-content/themes/gatov2",
      "filename": "/Users/callum/Documents/Coding/Projects/gatov2/wp-content/themes/gatov2/gulpfile.babel.js",
      "targets": {},
      "cloneInputAst": true,
      "babelrc": false,
      "configFile": false,
      "browserslistConfigFile": false,
      "envName": "development",
      "root": "/Users/callum/Documents/Coding/Projects/gatov2/wp-content/themes/gatov2",
      "rootMode": "root",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-class-properties",
          "visitor": {
            "PrivateName": {
              "enter": [
                null
              ]
            },
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "loose": "#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error"
          }
        },
        {
          "key": "proposal-private-methods",
          "visitor": {
            "PrivateName": {
              "enter": [
                null
              ]
            },
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "loose": "#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error"
          }
        },
        {
          "key": "proposal-numeric-separator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "BigIntLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-logical-assignment-operators",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "AssignmentExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": true,
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            },
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-escapes",
          "visitor": {
            "Identifier": {
              "enter": [
                null
              ]
            },
            "TemplateElement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "StaticBlock": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-export-namespace-from",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/Users/callum/Documents/Coding/Projects/gatov2/wp-content/themes/gatov2/gulpfile.babel.js",
        "plugins": [
          "classProperties",
          "classPrivateProperties",
          "classPrivateMethods",
          "numericSeparator",
          "logicalAssignment",
          "nullishCoalescingOperator",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "exportNamespaceFrom",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/Users/callum/Documents/Coding/Projects/gatov2/wp-content/themes/gatov2/gulpfile.babel.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/Users/callum/Documents/Coding/Projects/gatov2/wp-content/themes/gatov2/",
        "sourceFileName": "gulpfile.babel.js",
        "jsescOption": {
          "minimal": false
        }
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = exports.dev = exports.watch = exports.styles = exports.delCss = exports.reload = exports.serve = void 0;\n\nvar _gulp = _interopRequireDefault(require(\"gulp\"));\n\nvar _gulpSass = _interopRequireDefault(require(\"gulp-sass\"));\n\nvar _browserSync = _interopRequireDefault(require(\"browser-sync\"));\n\nvar _del = _interopRequireDefault(require(\"del\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\n// Create server instance\nvar server = _browserSync[\"default\"].create(); // Paths to Folders & Files\n\n\nvar paths = {\n  styles: {\n    src: \"src/scss/main.scss\",\n    dest: \"public/css\"\n  }\n}; // Init Server (ENTER SERVER LOCATION)\n\nvar serve = function serve(done) {\n  server.init({\n    proxy: \"gatov2.cal\"\n  });\n  done();\n}; // Reload Server\n\n\nexports.serve = serve;\n\nvar reload = function reload(done) {\n  server.reload();\n  done();\n}; // Delete existing CSS \n\n\nexports.reload = reload;\n\nvar delCss = function delCss() {\n  return (0, _del[\"default\"])('public/css/main.css');\n}; // Convert SCSS to CSS\n\n\nexports.delCss = delCss;\n\nvar styles = function styles() {\n  return _gulp[\"default\"].src(paths.styles.src).pipe((0, _gulpSass[\"default\"])().on('error', _gulpSass[\"default\"].logError)).pipe(_gulp[\"default\"].dest(paths.styles.dest)).pipe(server.stream());\n}; // Watch For Changes\n\n\nexports.styles = styles;\n\nvar watch = function watch() {\n  _gulp[\"default\"].watch('src/**/*.scss', styles);\n\n  _gulp[\"default\"].watch('**/*.html', reload);\n\n  _gulp[\"default\"].watch('**/*.php', reload);\n}; // Dev Function\n\n\nexports.watch = watch;\n\nvar dev = _gulp[\"default\"].series(delCss, styles, serve, watch); //Gulp Default\n\n\nexports.dev = dev;\nvar _default = dev;\nexports[\"default\"] = _default;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImd1bHBmaWxlLmJhYmVsLmpzIl0sIm5hbWVzIjpbInNlcnZlciIsImJyb3dzZXJTeW5jIiwiY3JlYXRlIiwicGF0aHMiLCJzdHlsZXMiLCJzcmMiLCJkZXN0Iiwic2VydmUiLCJkb25lIiwiaW5pdCIsInByb3h5IiwicmVsb2FkIiwiZGVsQ3NzIiwiZ3VscCIsInBpcGUiLCJvbiIsInNhc3MiLCJsb2dFcnJvciIsInN0cmVhbSIsIndhdGNoIiwiZGV2Iiwic2VyaWVzIl0sIm1hcHBpbmdzIjoiOzs7Ozs7O0FBQUE7O0FBQ0E7O0FBQ0E7O0FBQ0E7Ozs7QUFFQTtBQUNBLElBQU1BLE1BQU0sR0FBR0Msd0JBQVlDLE1BQVosRUFBZixDLENBRUE7OztBQUNBLElBQU1DLEtBQUssR0FBRztBQUNWQyxFQUFBQSxNQUFNLEVBQUU7QUFDSkMsSUFBQUEsR0FBRyxFQUFHLG9CQURGO0FBRUpDLElBQUFBLElBQUksRUFBRTtBQUZGO0FBREUsQ0FBZCxDLENBT0E7O0FBQ08sSUFBTUMsS0FBSyxHQUFHLFNBQVJBLEtBQVEsQ0FBQ0MsSUFBRCxFQUFVO0FBQzNCUixFQUFBQSxNQUFNLENBQUNTLElBQVAsQ0FBWTtBQUNSQyxJQUFBQSxLQUFLLEVBQUU7QUFEQyxHQUFaO0FBR0FGLEVBQUFBLElBQUk7QUFDUCxDQUxNLEMsQ0FPUDs7Ozs7QUFDTyxJQUFNRyxNQUFNLEdBQUcsU0FBVEEsTUFBUyxDQUFDSCxJQUFELEVBQVU7QUFDNUJSLEVBQUFBLE1BQU0sQ0FBQ1csTUFBUDtBQUNBSCxFQUFBQSxJQUFJO0FBQ1AsQ0FITSxDLENBS1A7Ozs7O0FBQ08sSUFBTUksTUFBTSxHQUFHLFNBQVRBLE1BQVMsR0FBTTtBQUN4QixTQUFPLHFCQUFJLHFCQUFKLENBQVA7QUFDSCxDQUZNLEMsQ0FJUDs7Ozs7QUFDTyxJQUFNUixNQUFNLEdBQUcsU0FBVEEsTUFBUyxHQUFNO0FBQ3hCLFNBQU9TLGlCQUFLUixHQUFMLENBQVNGLEtBQUssQ0FBQ0MsTUFBTixDQUFhQyxHQUF0QixFQUNGUyxJQURFLENBQ0csNEJBQU9DLEVBQVAsQ0FBVSxPQUFWLEVBQW1CQyxxQkFBS0MsUUFBeEIsQ0FESCxFQUVGSCxJQUZFLENBRUdELGlCQUFLUCxJQUFMLENBQVVILEtBQUssQ0FBQ0MsTUFBTixDQUFhRSxJQUF2QixDQUZILEVBR0ZRLElBSEUsQ0FHR2QsTUFBTSxDQUFDa0IsTUFBUCxFQUhILENBQVA7QUFJSCxDQUxNLEMsQ0FRUDs7Ozs7QUFDTyxJQUFNQyxLQUFLLEdBQUcsU0FBUkEsS0FBUSxHQUFNO0FBQ3ZCTixtQkFBS00sS0FBTCxDQUFXLGVBQVgsRUFBNEJmLE1BQTVCOztBQUNBUyxtQkFBS00sS0FBTCxDQUFXLFdBQVgsRUFBd0JSLE1BQXhCOztBQUNBRSxtQkFBS00sS0FBTCxDQUFXLFVBQVgsRUFBdUJSLE1BQXZCO0FBQ0gsQ0FKTSxDLENBTVA7Ozs7O0FBQ08sSUFBTVMsR0FBRyxHQUFHUCxpQkFBS1EsTUFBTCxDQUFhVCxNQUFiLEVBQXFCUixNQUFyQixFQUE2QkcsS0FBN0IsRUFBb0NZLEtBQXBDLENBQVosQyxDQUdQOzs7O2VBQ2VDLEciLCJzb3VyY2VSb290IjoiL1VzZXJzL2NhbGx1bS9Eb2N1bWVudHMvQ29kaW5nL1Byb2plY3RzL2dhdG92Mi93cC1jb250ZW50L3RoZW1lcy9nYXRvdjIvIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IGd1bHAgZnJvbSAnZ3VscCdcbmltcG9ydCBzYXNzIGZyb20gJ2d1bHAtc2FzcydcbmltcG9ydCBicm93c2VyU3luYyBmcm9tICdicm93c2VyLXN5bmMnO1xuaW1wb3J0IGRlbCBmcm9tICdkZWwnO1xuXG4vLyBDcmVhdGUgc2VydmVyIGluc3RhbmNlXG5jb25zdCBzZXJ2ZXIgPSBicm93c2VyU3luYy5jcmVhdGUoKTtcblxuLy8gUGF0aHMgdG8gRm9sZGVycyAmIEZpbGVzXG5jb25zdCBwYXRocyA9IHtcbiAgICBzdHlsZXM6IHtcbiAgICAgICAgc3JjIDogXCJzcmMvc2Nzcy9tYWluLnNjc3NcIixcbiAgICAgICAgZGVzdDogXCJwdWJsaWMvY3NzXCJcbiAgICB9XG59XG5cbi8vIEluaXQgU2VydmVyIChFTlRFUiBTRVJWRVIgTE9DQVRJT04pXG5leHBvcnQgY29uc3Qgc2VydmUgPSAoZG9uZSkgPT4ge1xuICAgIHNlcnZlci5pbml0KHtcbiAgICAgICAgcHJveHk6IFwiZ2F0b3YyLmNhbFwiXG4gICAgfSk7XG4gICAgZG9uZSgpO1xufVxuXG4vLyBSZWxvYWQgU2VydmVyXG5leHBvcnQgY29uc3QgcmVsb2FkID0gKGRvbmUpID0+IHtcbiAgICBzZXJ2ZXIucmVsb2FkKCk7XG4gICAgZG9uZSgpO1xufVxuXG4vLyBEZWxldGUgZXhpc3RpbmcgQ1NTIFxuZXhwb3J0IGNvbnN0IGRlbENzcyA9ICgpID0+IHtcbiAgICByZXR1cm4gZGVsKCdwdWJsaWMvY3NzL21haW4uY3NzJyk7XG59XG5cbi8vIENvbnZlcnQgU0NTUyB0byBDU1NcbmV4cG9ydCBjb25zdCBzdHlsZXMgPSAoKSA9PiB7ICAgIFxuICAgIHJldHVybiBndWxwLnNyYyhwYXRocy5zdHlsZXMuc3JjKVxuICAgICAgICAucGlwZShzYXNzKCkub24oJ2Vycm9yJywgc2Fzcy5sb2dFcnJvcikpXG4gICAgICAgIC5waXBlKGd1bHAuZGVzdChwYXRocy5zdHlsZXMuZGVzdCkpXG4gICAgICAgIC5waXBlKHNlcnZlci5zdHJlYW0oKSlcbn1cblxuXG4vLyBXYXRjaCBGb3IgQ2hhbmdlc1xuZXhwb3J0IGNvbnN0IHdhdGNoID0gKCkgPT4ge1xuICAgIGd1bHAud2F0Y2goJ3NyYy8qKi8qLnNjc3MnLCBzdHlsZXMpO1xuICAgIGd1bHAud2F0Y2goJyoqLyouaHRtbCcsIHJlbG9hZCk7XG4gICAgZ3VscC53YXRjaCgnKiovKi5waHAnLCByZWxvYWQpO1xufVxuXG4vLyBEZXYgRnVuY3Rpb25cbmV4cG9ydCBjb25zdCBkZXYgPSBndWxwLnNlcmllcyggZGVsQ3NzLCBzdHlsZXMsIHNlcnZlLCB3YXRjaCk7XG5cblxuLy9HdWxwIERlZmF1bHRcbmV4cG9ydCBkZWZhdWx0IGRldjtcbiJdfQ==",
    "map": {
      "version": 3,
      "sources": [
        "gulpfile.babel.js"
      ],
      "names": [
        "server",
        "browserSync",
        "create",
        "paths",
        "styles",
        "src",
        "dest",
        "serve",
        "done",
        "init",
        "proxy",
        "reload",
        "delCss",
        "gulp",
        "pipe",
        "on",
        "sass",
        "logError",
        "stream",
        "watch",
        "dev",
        "series"
      ],
      "mappings": ";;;;;;;AAAA;;AACA;;AACA;;AACA;;;;AAEA;AACA,IAAMA,MAAM,GAAGC,wBAAYC,MAAZ,EAAf,C,CAEA;;;AACA,IAAMC,KAAK,GAAG;AACVC,EAAAA,MAAM,EAAE;AACJC,IAAAA,GAAG,EAAG,oBADF;AAEJC,IAAAA,IAAI,EAAE;AAFF;AADE,CAAd,C,CAOA;;AACO,IAAMC,KAAK,GAAG,SAARA,KAAQ,CAACC,IAAD,EAAU;AAC3BR,EAAAA,MAAM,CAACS,IAAP,CAAY;AACRC,IAAAA,KAAK,EAAE;AADC,GAAZ;AAGAF,EAAAA,IAAI;AACP,CALM,C,CAOP;;;;;AACO,IAAMG,MAAM,GAAG,SAATA,MAAS,CAACH,IAAD,EAAU;AAC5BR,EAAAA,MAAM,CAACW,MAAP;AACAH,EAAAA,IAAI;AACP,CAHM,C,CAKP;;;;;AACO,IAAMI,MAAM,GAAG,SAATA,MAAS,GAAM;AACxB,SAAO,qBAAI,qBAAJ,CAAP;AACH,CAFM,C,CAIP;;;;;AACO,IAAMR,MAAM,GAAG,SAATA,MAAS,GAAM;AACxB,SAAOS,iBAAKR,GAAL,CAASF,KAAK,CAACC,MAAN,CAAaC,GAAtB,EACFS,IADE,CACG,4BAAOC,EAAP,CAAU,OAAV,EAAmBC,qBAAKC,QAAxB,CADH,EAEFH,IAFE,CAEGD,iBAAKP,IAAL,CAAUH,KAAK,CAACC,MAAN,CAAaE,IAAvB,CAFH,EAGFQ,IAHE,CAGGd,MAAM,CAACkB,MAAP,EAHH,CAAP;AAIH,CALM,C,CAQP;;;;;AACO,IAAMC,KAAK,GAAG,SAARA,KAAQ,GAAM;AACvBN,mBAAKM,KAAL,CAAW,eAAX,EAA4Bf,MAA5B;;AACAS,mBAAKM,KAAL,CAAW,WAAX,EAAwBR,MAAxB;;AACAE,mBAAKM,KAAL,CAAW,UAAX,EAAuBR,MAAvB;AACH,CAJM,C,CAMP;;;;;AACO,IAAMS,GAAG,GAAGP,iBAAKQ,MAAL,CAAaT,MAAb,EAAqBR,MAArB,EAA6BG,KAA7B,EAAoCY,KAApC,CAAZ,C,CAGP;;;;eACeC,G",
      "sourceRoot": "/Users/callum/Documents/Coding/Projects/gatov2/wp-content/themes/gatov2/",
      "sourcesContent": [
        "import gulp from 'gulp'\nimport sass from 'gulp-sass'\nimport browserSync from 'browser-sync';\nimport del from 'del';\n\n// Create server instance\nconst server = browserSync.create();\n\n// Paths to Folders & Files\nconst paths = {\n    styles: {\n        src : \"src/scss/main.scss\",\n        dest: \"public/css\"\n    }\n}\n\n// Init Server (ENTER SERVER LOCATION)\nexport const serve = (done) => {\n    server.init({\n        proxy: \"gatov2.cal\"\n    });\n    done();\n}\n\n// Reload Server\nexport const reload = (done) => {\n    server.reload();\n    done();\n}\n\n// Delete existing CSS \nexport const delCss = () => {\n    return del('public/css/main.css');\n}\n\n// Convert SCSS to CSS\nexport const styles = () => {    \n    return gulp.src(paths.styles.src)\n        .pipe(sass().on('error', sass.logError))\n        .pipe(gulp.dest(paths.styles.dest))\n        .pipe(server.stream())\n}\n\n\n// Watch For Changes\nexport const watch = () => {\n    gulp.watch('src/**/*.scss', styles);\n    gulp.watch('**/*.html', reload);\n    gulp.watch('**/*.php', reload);\n}\n\n// Dev Function\nexport const dev = gulp.series( delCss, styles, serve, watch);\n\n\n//Gulp Default\nexport default dev;\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1628638111813
  }
}